{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/d/programming/github/choisauce/anime_quiz_database/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/mnt/d/programming/github/choisauce/anime_quiz_database/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { ref } from 'vue';\nimport getQuestions from '../composables/getQuestions';\nimport getCategories from '../composables/getCategories';\nimport { useRouter } from 'vue-router';\nimport CategoryModal from './CategoryModal.vue';\nexport default {\n  components: {\n    CategoryModal: CategoryModal\n  },\n  setup: function setup() {\n    var _getQuestions = getQuestions(),\n      questions = _getQuestions.questions,\n      qError = _getQuestions.qError,\n      qLoad = _getQuestions.qLoad;\n    var _getCategories = getCategories(),\n      categories = _getCategories.categories,\n      cError = _getCategories.cError,\n      cLoad = _getCategories.cLoad;\n    qLoad();\n    cLoad();\n    var question = ref('');\n    var answer = ref('');\n    var fandom = ref('');\n    var cat = ref('select category');\n    var difficulty = ref('');\n    var tag = ref('');\n    var tags = ref([]);\n    var showModal = ref(false);\n    var showCatError = ref(false);\n    var catError = ref('');\n    var questionType = ref('text');\n    var router = useRouter();\n    console.log(router);\n    var showCategories = function showCategories() {\n      showModal.value = true;\n      console.log(\"Showing modal\");\n    };\n    var selectCategory = function selectCategory(newCat) {\n      showModal.value = false;\n      cat.value = newCat;\n    };\n    var hideCategories = function hideCategories() {\n      showModal.value = false;\n    };\n    var handleKeydown = function handleKeydown() {\n      if (!tags.value.includes(tag.value)) {\n        tag.value = tag.value.replace(/\\s/, '');\n        tags.value.push(tag.value);\n      }\n      tag.value = '';\n    };\n    var deleteTag = function deleteTag(toDel) {\n      tags.value = tags.value.filter(function (item) {\n        return toDel !== item;\n      });\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var post;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(cat.value === \"select category\")) {\n                _context.next = 5;\n                break;\n              }\n              catError.value = \"Please select a valid category\";\n              showCatError.value = true;\n              _context.next = 8;\n              break;\n            case 5:\n              post = {\n                question: question.value,\n                answer: answer.value,\n                questionType: questionType.value,\n                category: cat.value,\n                tags: tags.value,\n                fandom: fandom.value,\n                difficulty: difficulty.value\n              };\n              _context.next = 8;\n              return fetch('http://localhost:3000/questions', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(post)\n              });\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      questions: questions,\n      qError: qError,\n      categories: categories,\n      cError: cError,\n      question: question,\n      answer: answer,\n      fandom: fandom,\n      cat: cat,\n      tag: tag,\n      tags: tags,\n      difficulty: difficulty,\n      handleKeydown: handleKeydown,\n      deleteTag: deleteTag,\n      handleSubmit: handleSubmit,\n      showCategories: showCategories,\n      showModal: showModal,\n      hideCategories: hideCategories,\n      selectCategory: selectCategory,\n      catError: catError,\n      showCatError: showCatError,\n      questionType: questionType\n    };\n  }\n};","map":{"version":3,"names":["ref","getQuestions","getCategories","useRouter","CategoryModal","components","setup","_getQuestions","questions","qError","qLoad","_getCategories","categories","cError","cLoad","question","answer","fandom","cat","difficulty","tag","tags","showModal","showCatError","catError","questionType","router","console","log","showCategories","value","selectCategory","newCat","hideCategories","handleKeydown","includes","replace","push","deleteTag","toDel","filter","item","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","post","wrap","_callee$","_context","prev","next","category","fetch","method","headers","body","JSON","stringify","stop","apply","arguments"],"sources":["/mnt/d/programming/github/choisauce/anime_quiz_database/src/components/QuestionForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"create\">\r\n        <CategoryModal :categories=\"categories\" v-if=\"showModal\" @close=\"hideCategories\" @select=\"selectCategory\" />\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <label>Question:</label>\r\n            <input type=\"text\" v-model=\"question\" required>\r\n\r\n            <label>Question Type:</label>\r\n            <select name=\"\" id=\"\" v-model=\"questionType\" required>\r\n                <option value=\"text\">text</option>\r\n                <option value=\"image\">image</option>\r\n                <option value=\"video\">video</option>\r\n                <option value=\"audio\">audio</option>\r\n            </select>\r\n\r\n            <label>Answer:</label>\r\n            <input type=\"text\" v-model=\"answer\" required>\r\n            <label>Fandom:</label>\r\n            <input type=\"text\" v-model=\"fandom\" required>\r\n\r\n            <label>Category:</label>\r\n            <input type=\"text\" placeholder=\"Select Category\" v-model=\"cat\" @click.prevent=\"showCategories\" required READONLY>\r\n            <div v-if=\"showCatError\" class=\"error\">{{ catError }}</div>\r\n\r\n            <div class=\"error\" v-if=\"cError\">{{ cError }}</div>\r\n            <label>Difficulty:</label>\r\n            <select name=\"\" id=\"\" v-model=\"difficulty\" required>\r\n                <option value=\"easy\">easy</option>\r\n                <option value=\"medium\">medium</option>\r\n                <option value=\"hard\">hard</option>\r\n            </select>\r\n            <label>Tags:</label>\r\n            <input v-model=\"tag\" type=\"text\" @keydown.enter.prevent=\"handleKeydown\">\r\n            <div class=\"pill\" v-for=\"tag in tags\" :key=\"tag\">\r\n                <span @click=\"deleteTag(tag)\">{{ tag }}</span>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport getQuestions from '../composables/getQuestions'\r\nimport getCategories from '../composables/getCategories'\r\nimport { useRouter } from 'vue-router';\r\nimport CategoryModal from './CategoryModal.vue'\r\n\r\nexport default {\r\n    components: { CategoryModal },\r\n    setup() {\r\n\r\n        const { questions, qError, qLoad } = getQuestions()\r\n        const { categories, cError, cLoad } = getCategories()\r\n\r\n        qLoad()\r\n        cLoad()\r\n        \r\n        const question = ref('')\r\n        const answer = ref('')\r\n        const fandom = ref('')\r\n        const cat = ref('select category')\r\n        const difficulty = ref('')\r\n        const tag = ref('')\r\n        const tags = ref([])\r\n        const showModal = ref(false);\r\n        const showCatError = ref(false);\r\n        const catError = ref('')\r\n        const questionType = ref('text')\r\n\r\n        const router = useRouter()\r\n        console.log(router)\r\n\r\n        const showCategories = () => {\r\n            showModal.value = true;\r\n            console.log(\"Showing modal\")\r\n        }\r\n\r\n        const selectCategory = (newCat) => {\r\n            showModal.value = false\r\n            cat.value = newCat\r\n        }\r\n\r\n        const hideCategories = () => {\r\n            showModal.value = false\r\n        }\r\n\r\n        const handleKeydown = () => {\r\n            if(!tags.value.includes(tag.value)) {\r\n                tag.value = tag.value.replace(/\\s/, '')\r\n                tags.value.push(tag.value)\r\n            }\r\n            tag.value = ''\r\n        }\r\n\r\n        const deleteTag = (toDel) => {\r\n            tags.value = tags.value.filter((item) => {\r\n                return toDel !== item\r\n            })\r\n        }\r\n\r\n        const handleSubmit = async () => {\r\n            if(cat.value === \"select category\") {\r\n                catError.value = \"Please select a valid category\"\r\n                showCatError.value = true\r\n            }\r\n\r\n            else{\r\n                const post = {\r\n                    question: question.value,\r\n                    answer: answer.value,\r\n                    questionType:  questionType.value,\r\n                    category: cat.value,\r\n                    tags: tags.value,\r\n                    fandom: fandom.value,\r\n                    difficulty: difficulty.value\r\n                }\r\n\r\n                await fetch('http://localhost:3000/questions', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(post)\r\n                })\r\n            }\r\n        }\r\n        \r\n        return {\r\n            questions,\r\n            qError,\r\n            categories,\r\n            cError,\r\n            question,\r\n            answer,\r\n            fandom,\r\n            cat,\r\n            tag,\r\n            tags,\r\n            difficulty,\r\n            handleKeydown,\r\n            deleteTag,\r\n            handleSubmit,\r\n            showCategories,\r\n            showModal,\r\n            hideCategories,\r\n            selectCategory,\r\n            catError,\r\n            showCatError,\r\n            questionType\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        max-width: 420px;\r\n        margin: 30px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    label {\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n    button {\r\n        background: #0b6dff;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n    .submit {\r\n        text-align: center;\r\n    }\r\n    .pill {\r\n        display: inline-block;\r\n        margin: 10px 10px 0 0;\r\n        color: #444;\r\n        background: #ddd;\r\n        padding: 8px;\r\n        border-radius: 20px;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n    }\r\n    .error {\r\n        color: #ff0062;\r\n        margin-top: 10px;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}