{"ast":null,"code":"import { vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"toggle\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"slider\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"labels\",\n  \"data-on\": \"question\",\n  \"data-off\": \"category\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_QuestionForm = _resolveComponent(\"QuestionForm\");\n  const _component_CategoryForm = _resolveComponent(\"CategoryForm\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"label\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.formToggle = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $setup.formToggle]]), _hoisted_2, _hoisted_3]), $setup.formToggle ? (_openBlock(), _createBlock(_component_QuestionForm, {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_CategoryForm, {\n    key: 1\n  }))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","type","$setup","formToggle","$event","_hoisted_2","_hoisted_3","_createBlock","_component_QuestionForm","key","_component_CategoryForm"],"sources":["/mnt/d/programming/github/choisauce/anime_quiz_database/anime_quiz/src/views/Create.vue"],"sourcesContent":["<template>\r\n    <label class=\"toggle\">\r\n        <input type=\"checkbox\" v-model=\"formToggle\">\r\n        <span class=\"slider\"></span>\r\n        <span class=\"labels\" data-on=\"question\" data-off=\"category\"></span>\r\n    </label>\r\n\r\n    <QuestionForm v-if=\"formToggle\" />\r\n    <CategoryForm v-else />\r\n  \r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport CategoryForm from '../components/CategoryForm.vue'\r\nimport QuestionForm from '../components/QuestionForm.vue'\r\nexport default {\r\n    components: { CategoryForm, QuestionForm },\r\n    setup() {\r\n        const formToggle = ref(true);\r\n\r\n        const changeForm = () => {\r\n            formToggle!= formToggle\r\n        }\r\n\r\n        return {\r\n            formToggle,\r\n            changeForm\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n    /* styling lable */\r\n    .toggle {\r\n        --width: 110px;\r\n        /* --height: calc(var(--width) / 3); */\r\n        --height: 27px;\r\n\r\n        position: relative;\r\n        display: inline-block;\r\n        width: var(--width);\r\n        height: var(--height);\r\n        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\r\n        border-radius: var(--height);\r\n        cursor: pointer;\r\n    }\r\n\r\n    /* hiding checkbox */\r\n    .toggle input {\r\n        display: none;\r\n    }\r\n    /* Creating slider */\r\n    .toggle .slider {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: var(--height);\r\n        background-color: #ccc;\r\n        transition: all 0.4s ease-in-out;\r\n    }\r\n    .toggle .slider::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: calc(var(--height));\r\n        height: calc(var(--height));\r\n        border-radius: calc(var(--height) / 2);\r\n        background-color: #fff;\r\n        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\r\n        transition: all 0.4s ease-in-out;\r\n    }\r\n    /* Adding slider effect */\r\n    .toggle input:checked + .slider {\r\n        background-color: #2196F3;\r\n    }\r\n    .toggle input:checked + .slider::before {\r\n        transform: translateX(calc(var(--width) - var(--height)));\r\n    }\r\n    .toggle .labels {\r\n      position: absolute;\r\n      top: 8px;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 12px;\r\n      font-family: sans-serif;\r\n      transition: all 0.4s ease-in-out;\r\n    }\r\n\r\n    .toggle .labels::after {\r\n      content: attr(data-off);\r\n      position: absolute;\r\n      right: 5px;\r\n      color: #4d4d4d;\r\n      opacity: 1;\r\n      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\r\n      transition: all 0.4s ease-in-out;\r\n    }\r\n\r\n    .toggle .labels::before {\r\n      content: attr(data-on);\r\n      position: absolute;\r\n      left: 5px;\r\n      color: #ffffff;\r\n      opacity: 0;\r\n      text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.4);\r\n      transition: all 0.4s ease-in-out;\r\n    }\r\n\r\n    .toggle input:checked~.labels::after {\r\n      opacity: 0;\r\n    }\r\n\r\n    .toggle input:checked~.labels::before {\r\n      opacity: 1;\r\n    }\r\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAQ;gCAEjBC,mBAAA,CAA4B;EAAtBD,KAAK,EAAC;AAAQ;gCACpBC,mBAAA,CAAmE;EAA7DD,KAAK,EAAC,QAAQ;EAAC,SAAO,EAAC,UAAU;EAAC,UAAQ,EAAC;;;;;;6DAHrDC,mBAAA,CAIQ,SAJRC,UAIQ,G,gBAHJD,mBAAA,CAA4C;IAArCE,IAAI,EAAC,UAAU;+DAAUC,MAAA,CAAAC,UAAU,GAAAC,MAAA;qDAAVF,MAAA,CAAAC,UAAU,E,GAC1CE,UAA4B,EAC5BC,UAAmE,C,GAGnDJ,MAAA,CAAAC,UAAU,I,cAA9BI,YAAA,CAAkCC,uBAAA;IAAAC,GAAA;EAAA,O,cAClCF,YAAA,CAAuBG,uBAAA;IAAAD,GAAA;EAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}