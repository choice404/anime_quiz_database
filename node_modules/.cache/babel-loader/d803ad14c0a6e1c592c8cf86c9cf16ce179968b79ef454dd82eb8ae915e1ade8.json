{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport getQuestions from '../composables/getQuestions';\nimport getCategories from '../composables/getCategories';\nimport { useRouter } from 'vue-router';\nimport CategoryModal from './CategoryModal.vue';\nexport default {\n  components: {\n    CategoryModal\n  },\n  setup() {\n    const {\n      questions,\n      qError,\n      qLoad\n    } = getQuestions();\n    const {\n      categories,\n      cError,\n      cLoad\n    } = getCategories();\n    qLoad();\n    cLoad();\n    const question = ref('');\n    const answer = ref('');\n    const fandom = ref('');\n    const cat = ref('select category');\n    const difficulty = ref('');\n    const tag = ref('');\n    const tags = ref([]);\n    const showModal = ref(false);\n    const showCatError = ref(false);\n    const catError = ref('');\n    const questionType = ref('text');\n    const router = useRouter();\n    console.log(router);\n    const showCategories = () => {\n      showModal.value = true;\n      console.log(\"Showing modal\");\n    };\n    const selectCategory = newCat => {\n      showModal.value = false;\n      cat.value = newCat;\n    };\n    const hideCategories = () => {\n      showModal.value = false;\n    };\n    const handleKeydown = () => {\n      if (!tags.value.includes(tag.value)) {\n        tag.value = tag.value.replace(/\\s/, '');\n        tags.value.push(tag.value);\n      }\n      tag.value = '';\n    };\n    const deleteTag = toDel => {\n      tags.value = tags.value.filter(item => {\n        return toDel !== item;\n      });\n    };\n    const handleSubmit = async () => {\n      if (cat.value === \"select category\") {\n        catError.value = \"Please select a valid category\";\n        showCatError.value = true;\n      } else {\n        const post = {\n          question: question.value,\n          answer: answer.value,\n          questionType: questionType.value,\n          category: cat.value,\n          tags: tags.value,\n          fandom: fandom.value,\n          difficulty: difficulty.value\n        };\n        await fetch('http://localhost:3000/questions', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(post)\n        });\n      }\n    };\n    return {\n      questions,\n      qError,\n      categories,\n      cError,\n      question,\n      answer,\n      fandom,\n      cat,\n      tag,\n      tags,\n      difficulty,\n      handleKeydown,\n      deleteTag,\n      handleSubmit,\n      showCategories,\n      showModal,\n      hideCategories,\n      selectCategory,\n      catError,\n      showCatError,\n      questionType\n    };\n  }\n};","map":{"version":3,"names":["ref","getQuestions","getCategories","useRouter","CategoryModal","components","setup","questions","qError","qLoad","categories","cError","cLoad","question","answer","fandom","cat","difficulty","tag","tags","showModal","showCatError","catError","questionType","router","console","log","showCategories","value","selectCategory","newCat","hideCategories","handleKeydown","includes","replace","push","deleteTag","toDel","filter","item","handleSubmit","post","category","fetch","method","headers","body","JSON","stringify"],"sources":["/mnt/d/programming/github/choisauce/anime_quiz_database/anime_quiz/src/components/QuestionForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"create\">\r\n        <CategoryModal :categories=\"categories\" v-if=\"showModal\" @close=\"hideCategories\" @select=\"selectCategory\" />\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <label>Question:</label>\r\n            <input type=\"text\" v-model=\"question\" required>\r\n\r\n            <label>Question Type:</label>\r\n            <select name=\"\" id=\"\" v-model=\"questionType\" required>\r\n                <option value=\"text\">text</option>\r\n                <option value=\"image\">image</option>\r\n                <option value=\"video\">video</option>\r\n                <option value=\"audio\">audio</option>\r\n            </select>\r\n\r\n            <label>Answer:</label>\r\n            <input type=\"text\" v-model=\"answer\" required>\r\n            <label>Fandom:</label>\r\n            <input type=\"text\" v-model=\"fandom\" required>\r\n\r\n            <label>Category:</label>\r\n            <input type=\"text\" placeholder=\"Select Category\" v-model=\"cat\" @click.prevent=\"showCategories\" required READONLY>\r\n            <div v-if=\"showCatError\" class=\"error\">{{ catError }}</div>\r\n\r\n            <div class=\"error\" v-if=\"cError\">{{ cError }}</div>\r\n            <label>Difficulty:</label>\r\n            <select name=\"\" id=\"\" v-model=\"difficulty\" required>\r\n                <option value=\"easy\">easy</option>\r\n                <option value=\"medium\">medium</option>\r\n                <option value=\"hard\">hard</option>\r\n            </select>\r\n            <label>Tags:</label>\r\n            <input v-model=\"tag\" type=\"text\" @keydown.enter.prevent=\"handleKeydown\">\r\n            <div class=\"pill\" v-for=\"tag in tags\" :key=\"tag\">\r\n                <span @click=\"deleteTag(tag)\">{{ tag }}</span>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport getQuestions from '../composables/getQuestions'\r\nimport getCategories from '../composables/getCategories'\r\nimport { useRouter } from 'vue-router';\r\nimport CategoryModal from './CategoryModal.vue'\r\n\r\nexport default {\r\n    components: { CategoryModal },\r\n    setup() {\r\n\r\n        const { questions, qError, qLoad } = getQuestions()\r\n        const { categories, cError, cLoad } = getCategories()\r\n\r\n        qLoad()\r\n        cLoad()\r\n        \r\n        const question = ref('')\r\n        const answer = ref('')\r\n        const fandom = ref('')\r\n        const cat = ref('select category')\r\n        const difficulty = ref('')\r\n        const tag = ref('')\r\n        const tags = ref([])\r\n        const showModal = ref(false);\r\n        const showCatError = ref(false);\r\n        const catError = ref('')\r\n        const questionType = ref('text')\r\n\r\n        const router = useRouter()\r\n        console.log(router)\r\n\r\n        const showCategories = () => {\r\n            showModal.value = true;\r\n            console.log(\"Showing modal\")\r\n        }\r\n\r\n        const selectCategory = (newCat) => {\r\n            showModal.value = false\r\n            cat.value = newCat\r\n        }\r\n\r\n        const hideCategories = () => {\r\n            showModal.value = false\r\n        }\r\n\r\n        const handleKeydown = () => {\r\n            if(!tags.value.includes(tag.value)) {\r\n                tag.value = tag.value.replace(/\\s/, '')\r\n                tags.value.push(tag.value)\r\n            }\r\n            tag.value = ''\r\n        }\r\n\r\n        const deleteTag = (toDel) => {\r\n            tags.value = tags.value.filter((item) => {\r\n                return toDel !== item\r\n            })\r\n        }\r\n\r\n        const handleSubmit = async () => {\r\n            if(cat.value === \"select category\") {\r\n                catError.value = \"Please select a valid category\"\r\n                showCatError.value = true\r\n            }\r\n\r\n            else{\r\n                const post = {\r\n                    question: question.value,\r\n                    answer: answer.value,\r\n                    questionType:  questionType.value,\r\n                    category: cat.value,\r\n                    tags: tags.value,\r\n                    fandom: fandom.value,\r\n                    difficulty: difficulty.value\r\n                }\r\n\r\n                await fetch('http://localhost:3000/questions', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(post)\r\n                })\r\n            }\r\n        }\r\n        \r\n        return {\r\n            questions,\r\n            qError,\r\n            categories,\r\n            cError,\r\n            question,\r\n            answer,\r\n            fandom,\r\n            cat,\r\n            tag,\r\n            tags,\r\n            difficulty,\r\n            handleKeydown,\r\n            deleteTag,\r\n            handleSubmit,\r\n            showCategories,\r\n            showModal,\r\n            hideCategories,\r\n            selectCategory,\r\n            catError,\r\n            showCatError,\r\n            questionType\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        max-width: 420px;\r\n        margin: 30px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    label {\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n    .category {\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        background: white;\r\n        cursor: pointer;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n    button {\r\n        background: #0b6dff;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n    .submit {\r\n        text-align: center;\r\n    }\r\n    .pill {\r\n        display: inline-block;\r\n        margin: 10px 10px 0 0;\r\n        color: #444;\r\n        background: #ddd;\r\n        padding: 8px;\r\n        border-radius: 20px;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n    }\r\n    .error {\r\n        color: #ff0062;\r\n        margin-top: 10px;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}