{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/d/programming/github/choisauce/anime_quiz_database/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/mnt/d/programming/github/choisauce/anime_quiz_database/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport getCategories from '../composables/getCategories';\nexport default {\n  components: {},\n  setup: function setup() {\n    var _getCategories = getCategories(),\n      categories = _getCategories.categories,\n      cError = _getCategories.cError,\n      cLoad = _getCategories.cLoad;\n    cLoad();\n    var name = ref('');\n    var description = ref('');\n    var tag = ref('');\n    var tags = ref([]);\n    var showError = ref(false);\n    var duplicateError = \"Category already exists\";\n    var router = useRouter();\n    console.log(router);\n    var handleKeydown = function handleKeydown() {\n      if (!tags.value.includes(tag.value)) {\n        tag.value = tag.value.replace(/\\s/, '');\n        tags.value.push(tag.value);\n      }\n      tag.value = '';\n    };\n    var deleteTag = function deleteTag(toDel) {\n      tags.value = tags.value.filter(function (item) {\n        return toDel !== item;\n      });\n    };\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var duplicate, post;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              duplicate = categories.value.some(function (el) {\n                return el.name === name.value;\n              });\n              if (!duplicate) {\n                _context.next = 5;\n                break;\n              }\n              showError.value = true;\n              _context.next = 10;\n              break;\n            case 5:\n              if (duplicate) {\n                _context.next = 10;\n                break;\n              }\n              showError.value = false;\n              post = {\n                name: name.value,\n                description: description.value,\n                tags: tags.value\n              };\n              _context.next = 10;\n              return fetch('http://localhost:3000/categories', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(post)\n              });\n            case 10:\n              cLoad();\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function handleSubmit() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      categories: categories,\n      cError: cError,\n      name: name,\n      description: description,\n      tag: tag,\n      tags: tags,\n      handleKeydown: handleKeydown,\n      handleSubmit: handleSubmit,\n      deleteTag: deleteTag,\n      showError: showError,\n      duplicateError: duplicateError\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","getCategories","components","setup","_getCategories","categories","cError","cLoad","name","description","tag","tags","showError","duplicateError","router","console","log","handleKeydown","value","includes","replace","push","deleteTag","toDel","filter","item","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","duplicate","post","wrap","_callee$","_context","prev","next","some","el","fetch","method","headers","body","JSON","stringify","stop","apply","arguments"],"sources":["/mnt/d/programming/github/choisauce/anime_quiz_database/src/components/CategoryForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"create\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <label>Category:</label>\r\n            <input type=\"text\" v-model=\"name\" required>\r\n            <div v-if=\"showError\" class=\"error\">{{ duplicateError }}</div>\r\n            <label>Description:</label>\r\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"description\" style=\"resize: none;\" required></textarea>\r\n            <label>Tags:</label>\r\n            <input v-model=\"tag\" type=\"text\" @keydown.enter.prevent=\"handleKeydown\">\r\n            <div class=\"pill\" v-for=\"tag in tags\" :key=\"tag\">\r\n                <span @click=\"deleteTag(tag)\">{{ tag }}</span>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport getCategories from '../composables/getCategories'\r\nexport default {\r\n    components: {},\r\n    setup() {\r\n        const { categories, cError, cLoad } = getCategories()\r\n\r\n        cLoad()\r\n\r\n        const name = ref('')\r\n        const description = ref('')\r\n        const tag = ref('')\r\n        const tags = ref([])\r\n\r\n        let showError = ref(false);\r\n        let duplicateError = \"Category already exists\"\r\n\r\n        const router = useRouter()\r\n        console.log(router)\r\n\r\n        const handleKeydown = () => {\r\n            if(!tags.value.includes(tag.value)) {\r\n                tag.value = tag.value.replace(/\\s/, '')\r\n                tags.value.push(tag.value)\r\n            }\r\n            tag.value = ''\r\n        }\r\n\r\n        const deleteTag = (toDel) => {\r\n            tags.value = tags.value.filter((item) => {\r\n                return toDel !== item\r\n            })\r\n        }\r\n\r\n        const handleSubmit = async () => {\r\n\r\n            const duplicate = categories.value.some(el => el.name === name.value)\r\n            if(duplicate) showError.value = true;\r\n            \r\n            else if(!duplicate) {\r\n                showError.value = false;\r\n                const post = {\r\n                    name: name.value,\r\n                    description: description.value,\r\n                    tags: tags.value,\r\n                }\r\n\r\n                await fetch('http://localhost:3000/categories', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(post)\r\n                })\r\n            }\r\n\r\n            cLoad()\r\n        }\r\n        \r\n        return {\r\n            categories,\r\n            cError,\r\n            name,\r\n            description,\r\n            tag,\r\n            tags,\r\n            handleKeydown,\r\n            handleSubmit,\r\n            deleteTag,\r\n            showError,\r\n            duplicateError\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        max-width: 420px;\r\n        margin: 30px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    label {\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select, textarea{\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n    button {\r\n        background: #0b6dff;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n    .submit {\r\n        text-align: center;\r\n    }\r\n    .pill {\r\n        display: inline-block;\r\n        margin: 10px 10px 0 0;\r\n        color: #444;\r\n        background: #ddd;\r\n        padding: 8px;\r\n        border-radius: 20px;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n    }\r\n    .error {\r\n        color: #ff0062;\r\n        margin-top: 10px;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}