{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"create\"\n};\nvar _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Category:\", -1);\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Description:\", -1);\nvar _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Tags:\", -1);\nvar _hoisted_6 = [\"onClick\"];\nvar _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  \"class\": \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Submit\")], -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers(function () {\n      return $setup.handleSubmit && $setup.handleSubmit.apply($setup, arguments);\n    }, [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.name = $event;\n    }),\n    required: \"\"\n  }, null, 512), [[_vModelText, $setup.name]]), $setup.showError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.duplicateError), 1)) : _createCommentVNode(\"\", true), _hoisted_4, _withDirectives(_createElementVNode(\"textarea\", {\n    name: \"\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.description = $event;\n    }),\n    style: {\n      \"resize\": \"none\"\n    },\n    required: \"\"\n  }, null, 512), [[_vModelText, $setup.description]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n      return $setup.tag = $event;\n    }),\n    type: \"text\",\n    onKeydown: _cache[3] || (_cache[3] = _withKeys(_withModifiers(function () {\n      return $setup.handleKeydown && $setup.handleKeydown.apply($setup, arguments);\n    }, [\"prevent\"]), [\"enter\"]))\n  }, null, 544), [[_vModelText, $setup.tag]]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tags, function (tag) {\n    return _openBlock(), _createElementBlock(\"div\", {\n      \"class\": \"pill\",\n      key: tag\n    }, [_createElementVNode(\"span\", {\n      onClick: function onClick($event) {\n        return $setup.deleteTag(tag);\n      }\n    }, _toDisplayString(tag), 9, _hoisted_6)]);\n  }), 128)), _hoisted_7], 32)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","$setup","handleSubmit","apply","arguments","_hoisted_2","type","name","$event","required","showError","_hoisted_3","_toDisplayString","duplicateError","_hoisted_4","id","cols","rows","description","style","_hoisted_5","tag","onKeydown","_withKeys","handleKeydown","_Fragment","_renderList","tags","key","onClick","deleteTag","_hoisted_6","_hoisted_7"],"sources":["/mnt/d/programming/github/choisauce/anime_quiz_database/src/components/CategoryForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"create\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n            <label>Category:</label>\r\n            <input type=\"text\" v-model=\"name\" required>\r\n            <div v-if=\"showError\" class=\"error\">{{ duplicateError }}</div>\r\n            <label>Description:</label>\r\n            <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"description\" style=\"resize: none;\" required></textarea>\r\n            <label>Tags:</label>\r\n            <input v-model=\"tag\" type=\"text\" @keydown.enter.prevent=\"handleKeydown\">\r\n            <div class=\"pill\" v-for=\"tag in tags\" :key=\"tag\">\r\n                <span @click=\"deleteTag(tag)\">{{ tag }}</span>\r\n            </div>\r\n            <div class=\"submit\">\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport getCategories from '../composables/getCategories'\r\nexport default {\r\n    components: {},\r\n    setup() {\r\n        const { categories, cError, cLoad } = getCategories()\r\n\r\n        cLoad()\r\n\r\n        const name = ref('')\r\n        const description = ref('')\r\n        const tag = ref('')\r\n        const tags = ref([])\r\n\r\n        let showError = ref(false);\r\n        let duplicateError = \"Category already exists\"\r\n\r\n        const router = useRouter()\r\n        console.log(router)\r\n\r\n        const handleKeydown = () => {\r\n            if(!tags.value.includes(tag.value)) {\r\n                tag.value = tag.value.replace(/\\s/, '')\r\n                tags.value.push(tag.value)\r\n            }\r\n            tag.value = ''\r\n        }\r\n\r\n        const deleteTag = (toDel) => {\r\n            tags.value = tags.value.filter((item) => {\r\n                return toDel !== item\r\n            })\r\n        }\r\n\r\n        const handleSubmit = async () => {\r\n\r\n            const duplicate = categories.value.some(el => el.name === name.value)\r\n            if(duplicate) showError.value = true;\r\n            \r\n            else if(!duplicate) {\r\n                showError.value = false;\r\n                const post = {\r\n                    name: name.value,\r\n                    description: description.value,\r\n                    tags: tags.value,\r\n                }\r\n\r\n                await fetch('http://localhost:3000/categories', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(post)\r\n                })\r\n            }\r\n\r\n            cLoad()\r\n        }\r\n        \r\n        return {\r\n            categories,\r\n            cError,\r\n            name,\r\n            description,\r\n            tag,\r\n            tags,\r\n            handleKeydown,\r\n            handleSubmit,\r\n            deleteTag,\r\n            showError,\r\n            duplicateError\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        max-width: 420px;\r\n        margin: 30px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n    label {\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n    input, select, textarea{\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n    input[type=\"checkbox\"] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: relative;\r\n        top: 2px;\r\n    }\r\n    button {\r\n        background: #0b6dff;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n    .submit {\r\n        text-align: center;\r\n    }\r\n    .pill {\r\n        display: inline-block;\r\n        margin: 10px 10px 0 0;\r\n        color: #444;\r\n        background: #ddd;\r\n        padding: 8px;\r\n        border-radius: 20px;\r\n        font-size: 14px;\r\n        cursor: pointer;\r\n    }\r\n    .error {\r\n        color: #ff0062;\r\n        margin-top: 10px;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n    }\r\n</style>"],"mappings":";;;;;EACS,SAAM;AAAQ;8BAEXA,mBAAA,CAAwB,eAAjB,WAAS;;;EAEM,SAAM;;8BAC5BA,mBAAA,CAA2B,eAApB,cAAY;8BAEnBA,mBAAA,CAAoB,eAAb,OAAK;;8BAKZA,mBAAA,CAEM;EAFD,SAAM;AAAQ,I,aACfA,mBAAA,CAAuB,gBAAf,QAAM,E;;uBAb1BC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfFF,mBAAA,CAcO;IAdAG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA;MAAA,OAAUC,MAAA,CAAAC,YAAA,IAAAD,MAAA,CAAAC,YAAA,CAAAC,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAY;IAAA;MAC/BC,UAAwB,E,gBACxBV,mBAAA,CAA2C;IAApCW,IAAI,EAAC,MAAM;;aAAUL,MAAA,CAAAM,IAAI,GAAAC,MAAA;IAAA;IAAEC,QAAQ,EAAR;gCAANR,MAAA,CAAAM,IAAI,E,GACrBN,MAAA,CAAAS,SAAS,I,cAApBd,mBAAA,CAA8D,OAA9De,UAA8D,EAAAC,gBAAA,CAAvBX,MAAA,CAAAY,cAAc,S,+BACrDC,UAA2B,E,gBAC3BnB,mBAAA,CAA4G;IAAlGY,IAAI,EAAC,EAAE;IAACQ,EAAE,EAAC,EAAE;IAACC,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,IAAI;;aAAUhB,MAAA,CAAAiB,WAAW,GAAAV,MAAA;IAAA;IAAEW,KAAqB,EAArB;MAAA;IAAA,CAAqB;IAACV,QAAQ,EAAR;gCAAnCR,MAAA,CAAAiB,WAAW,E,GAChEE,UAAoB,E,gBACpBzB,mBAAA,CAAwE;;aAAxDM,MAAA,CAAAoB,GAAG,GAAAb,MAAA;IAAA;IAAEF,IAAI,EAAC,MAAM;IAAEgB,SAAO,EAAAvB,MAAA,QAAAA,MAAA,MAAAwB,SAAA,CAAAvB,cAAA;MAAA,OAAgBC,MAAA,CAAAuB,aAAA,IAAAvB,MAAA,CAAAuB,aAAA,CAAArB,KAAA,CAAAF,MAAA,EAAAG,SAAA,CAAa;IAAA;gCAAtDH,MAAA,CAAAoB,GAAG,E,sBACnBzB,mBAAA,CAEM6B,SAAA,QAAAC,WAAA,CAF0BzB,MAAA,CAAA0B,IAAI,YAAXN,GAAG;yBAA5BzB,mBAAA,CAEM;MAFD,SAAM,MAAM;MAAsBgC,GAAG,EAAEP;QACxC1B,mBAAA,CAA8C;MAAvCkC,OAAK,WAAAA,QAAArB,MAAA;QAAA,OAAEP,MAAA,CAAA6B,SAAS,CAACT,GAAG;MAAA;wBAAMA,GAAG,MAAAU,UAAA,E;aAExCC,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}